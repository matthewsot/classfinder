@{
    ViewBag.Title = "FAQ";
    Layout = "~/Views/Shared/_DefaultLayout.cshtml";
}

<h1>Common Questions...</h1>
<h3>It's not like anyone's actually asked us these questions, but the idea is they would if they hadn't seen this.</h3>
<style type="text/css">
    ul {
        list-style:none;
    }
    .question {
        color:#FF6060;
    }
</style>
<ul>
    <li class="question">What schools are supported?</li>
    <li>Currently, only Miller and Lynbrook are supported. If you would like us to add your school, contact support@classfinder.me.</li>
    <li class="question">Do you know when we'll get our schedules?</li>
    <li>As far as we know, Miller students will receive their schedules on either August 9th or 10th, and Lynbrook students will receive them on the 12th or 13th.</li>
    <li class="question">Is my info secure?! Where's the privacy policy?</li>
    <li>Your info is secured using current reccomended pracitices for ASP.NET. Your password is NOT salted and hashed using our code, instead it is hashed, salted, and inserted into the database with a Microsoft-developed, open-source membership provider called SimpleMembershipProvider. We do this because we admit that we don't know everything, and a team of people at Microsoft probably (definitely) can keep your password secure a <i>lot</i> better than we can. Your password is hashed <b>1,000</b> times using randomly generated salts - even if hackers/crackers break into the website (which they probably won't), they've got pretty much no chance of getting your password any time soon :)<br/><br/>Want proof?<br/>
    From the Classfinder.me <a href="http://classfinder.codeplex.com/">source code</a>, we see in <a href="https://classfinder.codeplex.com/SourceControl/latest#Classfinder/Classfinder/Hubs/Account.cs">Account.cs</a> (and the Signup function) that we're calling WebSecurity, which in turn <a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/view/035cb96e8e1be1008465204826401a0b19c544c4#src/WebMatrix.WebData/WebSecurity.cs">calls SimpleMembershipProvider</a> (well, technically the default Membership Provider, which is set in PreAppStartInit (still in the WebSecurity.cs source) as a SimpleMembershipProvider.<br/>
    Now we know it's calling CreateUserAndAccount in SimpleMembershipProvider, let's take a look at <a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/view/035cb96e8e1be1008465204826401a0b19c544c4#src/WebMatrix.WebData/SimpleMembershipProvider.cs" /> the SimpleMembershipProvider.cs source code</a>. In the CreateAccount function (called by the CreateUserAndAccount function that's called by the WebSecurity.CreateUserAndAccount function we call in our signup method), the password is hashed with Crypto.HashPassword.<br />
    Finally, looking at <a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/view/035cb96e8e1be1008465204826401a0b19c544c4#src/System.Web.Helpers/Crypto.cs"> the Crypto.cs source code</a>, we see the function HashPassword uses (to quote) "PBKDF2 with HMAC-SHA1, 128-bit salt, 256-bit subkey, 1000 iterations".<br/>
    Not bad, eh?<br/>
    It is important to note, however, that these are based off of old SDL guidelines, and the Classfinder team is actively looking into ways of increasing password security (primarily through code contributions to the open-source ASP.NET source code).<br/>
    As for a privacy policy, it's not like we could really enforce one if the NSA came knocking at our door, but if you want it, here it is:<br/>
    "We'll try our best not to screw this up."
</li>
    <li class="question">OMG SOMETHING DOESN'T WORK RIGHT!</li>
    <li>Contact us at support@classfinder.me and we'll get right on it.</li>
</ul>